version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miniapp2
    depends_on:
      - postgres
      - mongo
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/elshar2eya_lel_dokhan_postgresdb
      SPRING_DATASOURCE_USERNAME: elshar2eya_lel_dokhan
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_DATA_MONGODB_URI: mongodb://elshar2eya_lel_dokhan:1234@mongo:27017/elshar2eya_lel_dokhan_mongodb?authSource=admin
    ports:
      - "8080:8080"
    networks:
      - springboot-network

  postgres:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: elshar2eya_lel_dokhan_postgresdb
      POSTGRES_USER: elshar2eya_lel_dokhan
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - springboot-network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: elshar2eya_lel_dokhan
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: elshar2eya_lel_dokhan_mongodb
    ports:
      - "27017:27017"
    networks:
      - springboot-network

#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - "9000:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: hazem
#      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
#      ME_CONFIG_MONGODB_URL: mongodb://hazem:1234@mongo:27017/
#      ME_CONFIG_BASICAUTH: false

volumes:
  postgres_data:

networks:
  springboot-network:
    driver: bridge